{"ast":null,"code":"var _jsxFileName = \"D:\\\\LangChainJS\\\\chatpdf\\\\src\\\\Pdfdisp.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './Pdfdisp.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Pdfdisp() {\n  _s();\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [fileInfo, setFileInfo] = useState(null);\n  const handleFileChange = event => {\n    const file = event.target.files[0];\n    if (file && file.type === 'application/pdf') {\n      setSelectedFile(file);\n      setFileInfo({\n        name: file.name,\n        size: file.size,\n        type: file.type,\n        lastModified: file.lastModified\n      });\n    } else {\n      alert('Please upload a valid PDF file');\n    }\n  };\n  const handleSubmit = () => {\n    if (selectedFile) {\n      console.log('File Information:', fileInfo);\n      console.log('Selected File Object:', selectedFile);\n\n      // Process the fileContent as needed\n      const reader = new FileReader();\n      reader.onload = e => {\n        const fileContent = e.target.result;\n        console.log('File Content:', fileContent);\n        // You can process the file content here\n      };\n      reader.readAsArrayBuffer(selectedFile); // Read the file as an array buffer\n    } else {\n      alert('No file selected');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"pdf-div\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-heading\",\n      children: \"Welcome to ChatPDF Application\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"file-input\",\n      type: \"file\",\n      accept: \"application/pdf\",\n      onChange: handleFileChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"file-sbm-btn\",\n      onClick: handleSubmit,\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n_s(Pdfdisp, \"eu+cbDRrtPDTULrLJNHVv0dcES0=\");\n_c = Pdfdisp;\nexport default Pdfdisp;\nvar _c;\n$RefreshReg$(_c, \"Pdfdisp\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Pdfdisp","_s","selectedFile","setSelectedFile","fileInfo","setFileInfo","handleFileChange","event","file","target","files","type","name","size","lastModified","alert","handleSubmit","console","log","reader","FileReader","onload","e","fileContent","result","readAsArrayBuffer","className","children","fileName","_jsxFileName","lineNumber","columnNumber","accept","onChange","onClick","_c","$RefreshReg$"],"sources":["D:/LangChainJS/chatpdf/src/Pdfdisp.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './Pdfdisp.css';\r\n\r\nfunction Pdfdisp() {\r\n  const [selectedFile, setSelectedFile] = useState(null);\r\n  const [fileInfo, setFileInfo] = useState(null);\r\n\r\n  const handleFileChange = (event) => {\r\n    const file = event.target.files[0];\r\n\r\n    if (file && file.type === 'application/pdf') {\r\n      setSelectedFile(file);\r\n      setFileInfo({\r\n        name: file.name,\r\n        size: file.size,\r\n        type: file.type,\r\n        lastModified: file.lastModified,\r\n      });\r\n    } else {\r\n      alert('Please upload a valid PDF file');\r\n    }\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    if (selectedFile) {\r\n      console.log('File Information:', fileInfo);\r\n      console.log('Selected File Object:', selectedFile);\r\n\r\n      // Process the fileContent as needed\r\n      const reader = new FileReader();\r\n\r\n      reader.onload = (e) => {\r\n        const fileContent = e.target.result;\r\n        console.log('File Content:', fileContent);\r\n        // You can process the file content here\r\n      };\r\n\r\n      reader.readAsArrayBuffer(selectedFile); // Read the file as an array buffer\r\n    } else {\r\n      alert('No file selected');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"pdf-div\">\r\n      <div className=\"main-heading\">Welcome to ChatPDF Application</div>\r\n      <input className=\"file-input\" type=\"file\" accept=\"application/pdf\" onChange={handleFileChange} />\r\n      <button className=\"file-sbm-btn\" onClick={handleSubmit}>Submit</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Pdfdisp;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvB,SAASC,OAAOA,CAAA,EAAG;EAAAC,EAAA;EACjB,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGN,QAAQ,CAAC,IAAI,CAAC;EACtD,MAAM,CAACO,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAE9C,MAAMS,gBAAgB,GAAIC,KAAK,IAAK;IAClC,MAAMC,IAAI,GAAGD,KAAK,CAACE,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;IAElC,IAAIF,IAAI,IAAIA,IAAI,CAACG,IAAI,KAAK,iBAAiB,EAAE;MAC3CR,eAAe,CAACK,IAAI,CAAC;MACrBH,WAAW,CAAC;QACVO,IAAI,EAAEJ,IAAI,CAACI,IAAI;QACfC,IAAI,EAAEL,IAAI,CAACK,IAAI;QACfF,IAAI,EAAEH,IAAI,CAACG,IAAI;QACfG,YAAY,EAAEN,IAAI,CAACM;MACrB,CAAC,CAAC;IACJ,CAAC,MAAM;MACLC,KAAK,CAAC,gCAAgC,CAAC;IACzC;EACF,CAAC;EAED,MAAMC,YAAY,GAAGA,CAAA,KAAM;IACzB,IAAId,YAAY,EAAE;MAChBe,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEd,QAAQ,CAAC;MAC1Ca,OAAO,CAACC,GAAG,CAAC,uBAAuB,EAAEhB,YAAY,CAAC;;MAElD;MACA,MAAMiB,MAAM,GAAG,IAAIC,UAAU,CAAC,CAAC;MAE/BD,MAAM,CAACE,MAAM,GAAIC,CAAC,IAAK;QACrB,MAAMC,WAAW,GAAGD,CAAC,CAACb,MAAM,CAACe,MAAM;QACnCP,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEK,WAAW,CAAC;QACzC;MACF,CAAC;MAEDJ,MAAM,CAACM,iBAAiB,CAACvB,YAAY,CAAC,CAAC,CAAC;IAC1C,CAAC,MAAM;MACLa,KAAK,CAAC,kBAAkB,CAAC;IAC3B;EACF,CAAC;EAED,oBACEhB,OAAA;IAAK2B,SAAS,EAAC,SAAS;IAAAC,QAAA,gBACtB5B,OAAA;MAAK2B,SAAS,EAAC,cAAc;MAAAC,QAAA,EAAC;IAA8B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAClEhC,OAAA;MAAO2B,SAAS,EAAC,YAAY;MAACf,IAAI,EAAC,MAAM;MAACqB,MAAM,EAAC,iBAAiB;MAACC,QAAQ,EAAE3B;IAAiB;MAAAsB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACjGhC,OAAA;MAAQ2B,SAAS,EAAC,cAAc;MAACQ,OAAO,EAAElB,YAAa;MAAAW,QAAA,EAAC;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACpE,CAAC;AAEV;AAAC9B,EAAA,CA/CQD,OAAO;AAAAmC,EAAA,GAAPnC,OAAO;AAiDhB,eAAeA,OAAO;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}