{"ast":null,"code":"'use strict';\n\nconst http = require('http');\nconst https = require('https');\nconst Http2OverHttpX = require('./h2-over-hx.js');\nconst getAuthorizationHeaders = require('./get-auth-headers.js');\nconst getStream = request => new Promise((resolve, reject) => {\n  const onConnect = (response, socket, head) => {\n    socket.unshift(head);\n    request.off('error', reject);\n    resolve([socket, response.statusCode, response.statusMessage]);\n  };\n  request.once('error', reject);\n  request.once('connect', onConnect);\n});\nclass Http2OverHttp extends Http2OverHttpX {\n  async _getProxyStream(authority) {\n    const {\n      proxyOptions\n    } = this;\n    const {\n      url,\n      headers\n    } = this.proxyOptions;\n    const network = url.protocol === 'https:' ? https : http;\n\n    // `new URL('https://localhost/httpbin.org:443')` results in\n    // a `/httpbin.org:443` path, which has an invalid leading slash.\n    const request = network.request({\n      ...proxyOptions,\n      hostname: url.hostname,\n      port: url.port,\n      path: authority,\n      headers: {\n        ...getAuthorizationHeaders(this),\n        ...headers,\n        host: authority\n      },\n      method: 'CONNECT'\n    }).end();\n    return getStream(request);\n  }\n}\nmodule.exports = {\n  Http2OverHttp,\n  Http2OverHttps: Http2OverHttp\n};","map":{"version":3,"names":["http","require","https","Http2OverHttpX","getAuthorizationHeaders","getStream","request","Promise","resolve","reject","onConnect","response","socket","head","unshift","off","statusCode","statusMessage","once","Http2OverHttp","_getProxyStream","authority","proxyOptions","url","headers","network","protocol","hostname","port","path","host","method","end","module","exports","Http2OverHttps"],"sources":["D:/LangChainJS/chatpdf/node_modules/http2-wrapper/source/proxies/h2-over-h1.js"],"sourcesContent":["'use strict';\nconst http = require('http');\nconst https = require('https');\nconst Http2OverHttpX = require('./h2-over-hx.js');\nconst getAuthorizationHeaders = require('./get-auth-headers.js');\n\nconst getStream = request => new Promise((resolve, reject) => {\n\tconst onConnect = (response, socket, head) => {\n\t\tsocket.unshift(head);\n\n\t\trequest.off('error', reject);\n\t\tresolve([socket, response.statusCode, response.statusMessage]);\n\t};\n\n\trequest.once('error', reject);\n\trequest.once('connect', onConnect);\n});\n\nclass Http2OverHttp extends Http2OverHttpX {\n\tasync _getProxyStream(authority) {\n\t\tconst {proxyOptions} = this;\n\t\tconst {url, headers} = this.proxyOptions;\n\n\t\tconst network = url.protocol === 'https:' ? https : http;\n\n\t\t// `new URL('https://localhost/httpbin.org:443')` results in\n\t\t// a `/httpbin.org:443` path, which has an invalid leading slash.\n\t\tconst request = network.request({\n\t\t\t...proxyOptions,\n\t\t\thostname: url.hostname,\n\t\t\tport: url.port,\n\t\t\tpath: authority,\n\t\t\theaders: {\n\t\t\t\t...getAuthorizationHeaders(this),\n\t\t\t\t...headers,\n\t\t\t\thost: authority\n\t\t\t},\n\t\t\tmethod: 'CONNECT'\n\t\t}).end();\n\n\t\treturn getStream(request);\n\t}\n}\n\nmodule.exports = {\n\tHttp2OverHttp,\n\tHttp2OverHttps: Http2OverHttp\n};\n"],"mappings":"AAAA,YAAY;;AACZ,MAAMA,IAAI,GAAGC,OAAO,CAAC,MAAM,CAAC;AAC5B,MAAMC,KAAK,GAAGD,OAAO,CAAC,OAAO,CAAC;AAC9B,MAAME,cAAc,GAAGF,OAAO,CAAC,iBAAiB,CAAC;AACjD,MAAMG,uBAAuB,GAAGH,OAAO,CAAC,uBAAuB,CAAC;AAEhE,MAAMI,SAAS,GAAGC,OAAO,IAAI,IAAIC,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAK;EAC7D,MAAMC,SAAS,GAAGA,CAACC,QAAQ,EAAEC,MAAM,EAAEC,IAAI,KAAK;IAC7CD,MAAM,CAACE,OAAO,CAACD,IAAI,CAAC;IAEpBP,OAAO,CAACS,GAAG,CAAC,OAAO,EAAEN,MAAM,CAAC;IAC5BD,OAAO,CAAC,CAACI,MAAM,EAAED,QAAQ,CAACK,UAAU,EAAEL,QAAQ,CAACM,aAAa,CAAC,CAAC;EAC/D,CAAC;EAEDX,OAAO,CAACY,IAAI,CAAC,OAAO,EAAET,MAAM,CAAC;EAC7BH,OAAO,CAACY,IAAI,CAAC,SAAS,EAAER,SAAS,CAAC;AACnC,CAAC,CAAC;AAEF,MAAMS,aAAa,SAAShB,cAAc,CAAC;EAC1C,MAAMiB,eAAeA,CAACC,SAAS,EAAE;IAChC,MAAM;MAACC;IAAY,CAAC,GAAG,IAAI;IAC3B,MAAM;MAACC,GAAG;MAAEC;IAAO,CAAC,GAAG,IAAI,CAACF,YAAY;IAExC,MAAMG,OAAO,GAAGF,GAAG,CAACG,QAAQ,KAAK,QAAQ,GAAGxB,KAAK,GAAGF,IAAI;;IAExD;IACA;IACA,MAAMM,OAAO,GAAGmB,OAAO,CAACnB,OAAO,CAAC;MAC/B,GAAGgB,YAAY;MACfK,QAAQ,EAAEJ,GAAG,CAACI,QAAQ;MACtBC,IAAI,EAAEL,GAAG,CAACK,IAAI;MACdC,IAAI,EAAER,SAAS;MACfG,OAAO,EAAE;QACR,GAAGpB,uBAAuB,CAAC,IAAI,CAAC;QAChC,GAAGoB,OAAO;QACVM,IAAI,EAAET;MACP,CAAC;MACDU,MAAM,EAAE;IACT,CAAC,CAAC,CAACC,GAAG,CAAC,CAAC;IAER,OAAO3B,SAAS,CAACC,OAAO,CAAC;EAC1B;AACD;AAEA2B,MAAM,CAACC,OAAO,GAAG;EAChBf,aAAa;EACbgB,cAAc,EAAEhB;AACjB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}