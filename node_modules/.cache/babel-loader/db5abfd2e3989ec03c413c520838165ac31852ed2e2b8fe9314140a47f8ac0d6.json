{"ast":null,"code":"export class CancelError extends Error {\n  constructor(reason) {\n    super(reason || 'Promise was canceled');\n    this.name = 'CancelError';\n  }\n  get isCanceled() {\n    return true;\n  }\n}\n\n// TODO: Use private class fields when ESLint 8 is out.\n\nexport default class PCancelable {\n  static fn(userFunction) {\n    return (...arguments_) => {\n      return new PCancelable((resolve, reject, onCancel) => {\n        arguments_.push(onCancel);\n        // eslint-disable-next-line promise/prefer-await-to-then\n        userFunction(...arguments_).then(resolve, reject);\n      });\n    };\n  }\n  constructor(executor) {\n    this._cancelHandlers = [];\n    this._isPending = true;\n    this._isCanceled = false;\n    this._rejectOnCancel = true;\n    this._promise = new Promise((resolve, reject) => {\n      this._reject = reject;\n      const onResolve = value => {\n        if (!this._isCanceled || !onCancel.shouldReject) {\n          this._isPending = false;\n          resolve(value);\n        }\n      };\n      const onReject = error => {\n        this._isPending = false;\n        reject(error);\n      };\n      const onCancel = handler => {\n        if (!this._isPending) {\n          throw new Error('The `onCancel` handler was attached after the promise settled.');\n        }\n        this._cancelHandlers.push(handler);\n      };\n      Object.defineProperties(onCancel, {\n        shouldReject: {\n          get: () => this._rejectOnCancel,\n          set: boolean => {\n            this._rejectOnCancel = boolean;\n          }\n        }\n      });\n      executor(onResolve, onReject, onCancel);\n    });\n  }\n  then(onFulfilled, onRejected) {\n    // eslint-disable-next-line promise/prefer-await-to-then\n    return this._promise.then(onFulfilled, onRejected);\n  }\n  catch(onRejected) {\n    // eslint-disable-next-line promise/prefer-await-to-then\n    return this._promise.catch(onRejected);\n  }\n  finally(onFinally) {\n    // eslint-disable-next-line promise/prefer-await-to-then\n    return this._promise.finally(onFinally);\n  }\n  cancel(reason) {\n    if (!this._isPending || this._isCanceled) {\n      return;\n    }\n    this._isCanceled = true;\n    if (this._cancelHandlers.length > 0) {\n      try {\n        for (const handler of this._cancelHandlers) {\n          handler();\n        }\n      } catch (error) {\n        this._reject(error);\n        return;\n      }\n    }\n    if (this._rejectOnCancel) {\n      this._reject(new CancelError(reason));\n    }\n  }\n  get isCanceled() {\n    return this._isCanceled;\n  }\n}\nObject.setPrototypeOf(PCancelable.prototype, Promise.prototype);","map":{"version":3,"names":["CancelError","Error","constructor","reason","name","isCanceled","PCancelable","fn","userFunction","arguments_","resolve","reject","onCancel","push","then","executor","_cancelHandlers","_isPending","_isCanceled","_rejectOnCancel","_promise","Promise","_reject","onResolve","value","shouldReject","onReject","error","handler","Object","defineProperties","get","set","boolean","onFulfilled","onRejected","catch","finally","onFinally","cancel","length","setPrototypeOf","prototype"],"sources":["D:/LangChainJS/chatpdf/node_modules/p-cancelable/index.js"],"sourcesContent":["export class CancelError extends Error {\n\tconstructor(reason) {\n\t\tsuper(reason || 'Promise was canceled');\n\t\tthis.name = 'CancelError';\n\t}\n\n\tget isCanceled() {\n\t\treturn true;\n\t}\n}\n\n// TODO: Use private class fields when ESLint 8 is out.\n\nexport default class PCancelable {\n\tstatic fn(userFunction) {\n\t\treturn (...arguments_) => {\n\t\t\treturn new PCancelable((resolve, reject, onCancel) => {\n\t\t\t\targuments_.push(onCancel);\n\t\t\t\t// eslint-disable-next-line promise/prefer-await-to-then\n\t\t\t\tuserFunction(...arguments_).then(resolve, reject);\n\t\t\t});\n\t\t};\n\t}\n\n\tconstructor(executor) {\n\t\tthis._cancelHandlers = [];\n\t\tthis._isPending = true;\n\t\tthis._isCanceled = false;\n\t\tthis._rejectOnCancel = true;\n\n\t\tthis._promise = new Promise((resolve, reject) => {\n\t\t\tthis._reject = reject;\n\n\t\t\tconst onResolve = value => {\n\t\t\t\tif (!this._isCanceled || !onCancel.shouldReject) {\n\t\t\t\t\tthis._isPending = false;\n\t\t\t\t\tresolve(value);\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tconst onReject = error => {\n\t\t\t\tthis._isPending = false;\n\t\t\t\treject(error);\n\t\t\t};\n\n\t\t\tconst onCancel = handler => {\n\t\t\t\tif (!this._isPending) {\n\t\t\t\t\tthrow new Error('The `onCancel` handler was attached after the promise settled.');\n\t\t\t\t}\n\n\t\t\t\tthis._cancelHandlers.push(handler);\n\t\t\t};\n\n\t\t\tObject.defineProperties(onCancel, {\n\t\t\t\tshouldReject: {\n\t\t\t\t\tget: () => this._rejectOnCancel,\n\t\t\t\t\tset: boolean => {\n\t\t\t\t\t\tthis._rejectOnCancel = boolean;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\n\t\t\texecutor(onResolve, onReject, onCancel);\n\t\t});\n\t}\n\n\tthen(onFulfilled, onRejected) {\n\t\t// eslint-disable-next-line promise/prefer-await-to-then\n\t\treturn this._promise.then(onFulfilled, onRejected);\n\t}\n\n\tcatch(onRejected) {\n\t\t// eslint-disable-next-line promise/prefer-await-to-then\n\t\treturn this._promise.catch(onRejected);\n\t}\n\n\tfinally(onFinally) {\n\t\t// eslint-disable-next-line promise/prefer-await-to-then\n\t\treturn this._promise.finally(onFinally);\n\t}\n\n\tcancel(reason) {\n\t\tif (!this._isPending || this._isCanceled) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._isCanceled = true;\n\n\t\tif (this._cancelHandlers.length > 0) {\n\t\t\ttry {\n\t\t\t\tfor (const handler of this._cancelHandlers) {\n\t\t\t\t\thandler();\n\t\t\t\t}\n\t\t\t} catch (error) {\n\t\t\t\tthis._reject(error);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tif (this._rejectOnCancel) {\n\t\t\tthis._reject(new CancelError(reason));\n\t\t}\n\t}\n\n\tget isCanceled() {\n\t\treturn this._isCanceled;\n\t}\n}\n\nObject.setPrototypeOf(PCancelable.prototype, Promise.prototype);\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}