{"ast":null,"code":"var _jsxFileName = \"D:\\\\LangChainJS\\\\chatpdf\\\\src\\\\Pdfdisp.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './Pdfdisp.css';\nimport { Uploader } from \"uploader\";\nimport { UploadDropzone } from \"react-uploader\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PdfChat() {\n  _s();\n  const [uploadedFileUrl, setUploadedFileUrl] = useState(\"\");\n  const [extractedText, setExtractedText] = useState('');\n  const handleComplete = async files => {\n    if (files.length > 0) {\n      const input = files[0].fileUrl;\n      console.log(input);\n      setUploadedFileUrl(input);\n      try {\n        const data = {\n          \"url\": \"https://upcdn.io/FW25c5Z/raw/uploads/2024/06/05/4kZiVYdwCZ-ResumeShanay_12.pdf\",\n          \"inline\": true,\n          \"async\": false\n        };\n        const response = await axios.fetch('https://api.pdf.co/v1/pdf/convert/to/text-simple', {\n          method: \"POST\",\n          headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json',\n            'x-api-key': 'shanayshukla.7642@gmail.com_Ouwsgk7QtJIm9X5cklJM6kA1zYwiV1e7flAyxTtum913usLs3f4Z52Lq1uv9vu4R'\n          },\n          body: JSON.stringify(data)\n        });\n        setExtractedText(response.body); // Assuming the API response has a \"text\" property\n      } catch (error) {\n        console.error('Error fetching PDF text:', error);\n        setError(error.message || 'An error occurred while fetching text.');\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"pdf-div\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-heading\",\n      children: \"Welcome to ChatPDF Application\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(UploadDropzone, {\n      uploader: Uploader({\n        apiKey: \"public_FW25c5Z7W7hFTqdUY9USFQFpmpMh\"\n      }),\n      options: {\n        multi: true\n      },\n      onUpdate: handleComplete,\n      width: \"600px\",\n      height: \"375px\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n_s(PdfChat, \"nFUtZFSwMFZvaq2WYV/w12eR9JM=\");\n_c = PdfChat;\nexport default PdfChat;\nvar _c;\n$RefreshReg$(_c, \"PdfChat\");","map":{"version":3,"names":["React","useState","Uploader","UploadDropzone","jsxDEV","_jsxDEV","PdfChat","_s","uploadedFileUrl","setUploadedFileUrl","extractedText","setExtractedText","handleComplete","files","length","input","fileUrl","console","log","data","response","axios","fetch","method","headers","body","JSON","stringify","error","setError","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","uploader","apiKey","options","multi","onUpdate","width","height","_c","$RefreshReg$"],"sources":["D:/LangChainJS/chatpdf/src/Pdfdisp.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './Pdfdisp.css';\r\nimport { Uploader } from \"uploader\";\r\nimport { UploadDropzone } from \"react-uploader\";\r\n\r\n\r\n\r\n\r\nfunction PdfChat() {\r\n\r\n  const [uploadedFileUrl, setUploadedFileUrl] = useState(\"\");\r\n  const [extractedText, setExtractedText] = useState('');\r\n\r\n  const handleComplete = async (files) => {\r\n    if (files.length > 0) {\r\n      const input = files[0].fileUrl;\r\n      console.log(input);\r\n      setUploadedFileUrl(input);\r\n      try {\r\n        const data={\r\n          \"url\": \"https://upcdn.io/FW25c5Z/raw/uploads/2024/06/05/4kZiVYdwCZ-ResumeShanay_12.pdf\",\r\n          \"inline\": true,\r\n          \"async\": false\r\n        }\r\n\r\n\r\n\r\n        const response = await axios.fetch('https://api.pdf.co/v1/pdf/convert/to/text-simple', {\r\n          method:\"POST\",\r\n          headers:{\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json',\r\n            'x-api-key': 'shanayshukla.7642@gmail.com_Ouwsgk7QtJIm9X5cklJM6kA1zYwiV1e7flAyxTtum913usLs3f4Z52Lq1uv9vu4R'\r\n          },\r\n          body: JSON.stringify(data)\r\n        });\r\n  \r\n        setExtractedText(response.body); // Assuming the API response has a \"text\" property\r\n      } catch (error) {\r\n        console.error('Error fetching PDF text:', error);\r\n        setError(error.message || 'An error occurred while fetching text.');\r\n      }\r\n    }\r\n  };\r\n  \r\n\r\n  return (\r\n    <div className=\"pdf-div\">\r\n      <div className=\"main-heading\">Welcome to ChatPDF Application</div>\r\n      <UploadDropzone\r\n        uploader={Uploader({ apiKey: \"public_FW25c5Z7W7hFTqdUY9USFQFpmpMh\"})}\r\n        options={{ multi: true }}\r\n        onUpdate={handleComplete}\r\n        width=\"600px\"\r\n        height=\"375px\"\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PdfChat;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,eAAe;AACtB,SAASC,QAAQ,QAAQ,UAAU;AACnC,SAASC,cAAc,QAAQ,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAKhD,SAASC,OAAOA,CAAA,EAAG;EAAAC,EAAA;EAEjB,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC1D,MAAM,CAACS,aAAa,EAAEC,gBAAgB,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAEtD,MAAMW,cAAc,GAAG,MAAOC,KAAK,IAAK;IACtC,IAAIA,KAAK,CAACC,MAAM,GAAG,CAAC,EAAE;MACpB,MAAMC,KAAK,GAAGF,KAAK,CAAC,CAAC,CAAC,CAACG,OAAO;MAC9BC,OAAO,CAACC,GAAG,CAACH,KAAK,CAAC;MAClBN,kBAAkB,CAACM,KAAK,CAAC;MACzB,IAAI;QACF,MAAMI,IAAI,GAAC;UACT,KAAK,EAAE,gFAAgF;UACvF,QAAQ,EAAE,IAAI;UACd,OAAO,EAAE;QACX,CAAC;QAID,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACC,KAAK,CAAC,kDAAkD,EAAE;UACrFC,MAAM,EAAC,MAAM;UACbC,OAAO,EAAC;YACN,QAAQ,EAAE,kBAAkB;YAC5B,cAAc,EAAE,kBAAkB;YAClC,WAAW,EAAE;UACf,CAAC;UACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACR,IAAI;QAC3B,CAAC,CAAC;QAEFR,gBAAgB,CAACS,QAAQ,CAACK,IAAI,CAAC,CAAC,CAAC;MACnC,CAAC,CAAC,OAAOG,KAAK,EAAE;QACdX,OAAO,CAACW,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;QAChDC,QAAQ,CAACD,KAAK,CAACE,OAAO,IAAI,wCAAwC,CAAC;MACrE;IACF;EACF,CAAC;EAGD,oBACEzB,OAAA;IAAK0B,SAAS,EAAC,SAAS;IAAAC,QAAA,gBACtB3B,OAAA;MAAK0B,SAAS,EAAC,cAAc;MAAAC,QAAA,EAAC;IAA8B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAClE/B,OAAA,CAACF,cAAc;MACbkC,QAAQ,EAAEnC,QAAQ,CAAC;QAAEoC,MAAM,EAAE;MAAqC,CAAC,CAAE;MACrEC,OAAO,EAAE;QAAEC,KAAK,EAAE;MAAK,CAAE;MACzBC,QAAQ,EAAE7B,cAAe;MACzB8B,KAAK,EAAC,OAAO;MACbC,MAAM,EAAC;IAAO;MAAAV,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACf,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV;AAAC7B,EAAA,CAlDQD,OAAO;AAAAsC,EAAA,GAAPtC,OAAO;AAoDhB,eAAeA,OAAO;AAAC,IAAAsC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}