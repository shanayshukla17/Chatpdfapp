{"ast":null,"code":"'use strict';\n\nconst {\n  globalAgent\n} = require('../agent.js');\nconst Http2OverHttpX = require('./h2-over-hx.js');\nconst getAuthorizationHeaders = require('./get-auth-headers.js');\nconst getStatusCode = stream => new Promise((resolve, reject) => {\n  stream.once('error', reject);\n  stream.once('response', headers => {\n    stream.off('error', reject);\n    resolve(headers[':status']);\n  });\n});\nclass Http2OverHttp2 extends Http2OverHttpX {\n  async _getProxyStream(authority) {\n    const {\n      proxyOptions\n    } = this;\n    const headers = {\n      ...getAuthorizationHeaders(this),\n      ...proxyOptions.headers,\n      ':method': 'CONNECT',\n      ':authority': authority\n    };\n    const stream = await globalAgent.request(proxyOptions.url, proxyOptions, headers);\n    const statusCode = await getStatusCode(stream);\n    return [stream, statusCode, ''];\n  }\n}\nmodule.exports = Http2OverHttp2;","map":{"version":3,"names":["globalAgent","require","Http2OverHttpX","getAuthorizationHeaders","getStatusCode","stream","Promise","resolve","reject","once","headers","off","Http2OverHttp2","_getProxyStream","authority","proxyOptions","request","url","statusCode","module","exports"],"sources":["D:/LangChainJS/chatpdf/node_modules/http2-wrapper/source/proxies/h2-over-h2.js"],"sourcesContent":["'use strict';\nconst {globalAgent} = require('../agent.js');\nconst Http2OverHttpX = require('./h2-over-hx.js');\nconst getAuthorizationHeaders = require('./get-auth-headers.js');\n\nconst getStatusCode = stream => new Promise((resolve, reject) => {\n\tstream.once('error', reject);\n\tstream.once('response', headers => {\n\t\tstream.off('error', reject);\n\t\tresolve(headers[':status']);\n\t});\n});\n\nclass Http2OverHttp2 extends Http2OverHttpX {\n\tasync _getProxyStream(authority) {\n\t\tconst {proxyOptions} = this;\n\n\t\tconst headers = {\n\t\t\t...getAuthorizationHeaders(this),\n\t\t\t...proxyOptions.headers,\n\t\t\t':method': 'CONNECT',\n\t\t\t':authority': authority\n\t\t};\n\n\t\tconst stream = await globalAgent.request(proxyOptions.url, proxyOptions, headers);\n\t\tconst statusCode = await getStatusCode(stream);\n\n\t\treturn [stream, statusCode, ''];\n\t}\n}\n\nmodule.exports = Http2OverHttp2;\n"],"mappings":"AAAA,YAAY;;AACZ,MAAM;EAACA;AAAW,CAAC,GAAGC,OAAO,CAAC,aAAa,CAAC;AAC5C,MAAMC,cAAc,GAAGD,OAAO,CAAC,iBAAiB,CAAC;AACjD,MAAME,uBAAuB,GAAGF,OAAO,CAAC,uBAAuB,CAAC;AAEhE,MAAMG,aAAa,GAAGC,MAAM,IAAI,IAAIC,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAK;EAChEH,MAAM,CAACI,IAAI,CAAC,OAAO,EAAED,MAAM,CAAC;EAC5BH,MAAM,CAACI,IAAI,CAAC,UAAU,EAAEC,OAAO,IAAI;IAClCL,MAAM,CAACM,GAAG,CAAC,OAAO,EAAEH,MAAM,CAAC;IAC3BD,OAAO,CAACG,OAAO,CAAC,SAAS,CAAC,CAAC;EAC5B,CAAC,CAAC;AACH,CAAC,CAAC;AAEF,MAAME,cAAc,SAASV,cAAc,CAAC;EAC3C,MAAMW,eAAeA,CAACC,SAAS,EAAE;IAChC,MAAM;MAACC;IAAY,CAAC,GAAG,IAAI;IAE3B,MAAML,OAAO,GAAG;MACf,GAAGP,uBAAuB,CAAC,IAAI,CAAC;MAChC,GAAGY,YAAY,CAACL,OAAO;MACvB,SAAS,EAAE,SAAS;MACpB,YAAY,EAAEI;IACf,CAAC;IAED,MAAMT,MAAM,GAAG,MAAML,WAAW,CAACgB,OAAO,CAACD,YAAY,CAACE,GAAG,EAAEF,YAAY,EAAEL,OAAO,CAAC;IACjF,MAAMQ,UAAU,GAAG,MAAMd,aAAa,CAACC,MAAM,CAAC;IAE9C,OAAO,CAACA,MAAM,EAAEa,UAAU,EAAE,EAAE,CAAC;EAChC;AACD;AAEAC,MAAM,CAACC,OAAO,GAAGR,cAAc","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}