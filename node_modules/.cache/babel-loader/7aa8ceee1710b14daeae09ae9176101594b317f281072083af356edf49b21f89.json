{"ast":null,"code":"var _jsxFileName = \"D:\\\\LangChainJS\\\\chatpdf\\\\src\\\\Chat.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './Chat.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Chat() {\n  _s();\n  const [inputValue, setInputValue] = useState('');\n  const [chatHistory, setChatHistory] = useState([]);\n  const handleInputChange = event => {\n    setInputValue(event.target.value);\n  };\n  const handleClick = async () => {\n    // Pass the inputValue to your Chat function or handle it here\n    console.log(\"Input value: \", inputValue);\n\n    // const updatedChatHistory = [...chatHistory, {role:\"user\",parts:inputValue}];\n    // setChatHistory(updatedChatHistory);\n\n    const msg = inputValue;\n    const options = {\n      method: 'POST',\n      body: JSON.stringify({\n        history: chatHistory,\n        message: msg\n      }),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    try {\n      const response = await fetch('http://localhost:8000/gemini', options);\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      const data = await response.text();\n      console.log(data);\n      // Optionally, update chat history with the response\n      setChatHistory(updatedChatHistory => [...updatedChatHistory, {\n        role: \"user\",\n        parts: [{\n          text: inputValue\n        }]\n      }, {\n        role: \"model\",\n        parts: [{\n          text: data\n        }]\n      }]);\n    } catch (error) {\n      console.error('There has been a problem with your fetch operation:', error);\n    }\n\n    // Clear the input field\n    setInputValue(\"\");\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-show\",\n        children: chatHistory.map((entry, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `chat-message ${entry.role}`,\n          children: entry.parts\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input_div\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"input_field\",\n          value: inputValue,\n          placeholder: \"Hi Please Ask me questions\",\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"arrow\",\n          onClick: handleClick,\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"/icons8-arrow-50.png\",\n            alt: \"Arrow icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n_s(Chat, \"AlnTJSS3H40CQt/6unueaBowJJk=\");\n_c = Chat;\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","Chat","_s","inputValue","setInputValue","chatHistory","setChatHistory","handleInputChange","event","target","value","handleClick","console","log","msg","options","method","body","JSON","stringify","history","message","headers","response","fetch","ok","Error","data","text","updatedChatHistory","role","parts","error","children","className","map","entry","index","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","onChange","onClick","src","alt","_c","$RefreshReg$"],"sources":["D:/LangChainJS/chatpdf/src/Chat.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './Chat.css';\r\n\r\nfunction Chat() {\r\n    const [inputValue, setInputValue] = useState('');\r\n    const [chatHistory, setChatHistory] = useState([]);\r\n\r\n    const handleInputChange = (event) => {\r\n        setInputValue(event.target.value);\r\n    };\r\n\r\n    const handleClick = async () => {\r\n        // Pass the inputValue to your Chat function or handle it here\r\n        console.log(\"Input value: \", inputValue);\r\n\r\n        // const updatedChatHistory = [...chatHistory, {role:\"user\",parts:inputValue}];\r\n        // setChatHistory(updatedChatHistory);\r\n\r\n        const msg = inputValue;\r\n        const options = {\r\n            method: 'POST',\r\n            body: JSON.stringify({\r\n                history: chatHistory,\r\n                message: msg\r\n            }),\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        };\r\n\r\n        try {\r\n            const response = await fetch('http://localhost:8000/gemini', options);\r\n            if (!response.ok) {\r\n                throw new Error('Network response was not ok');\r\n            }\r\n            const data = await response.text();\r\n            console.log(data)\r\n            // Optionally, update chat history with the response\r\n            setChatHistory(updatedChatHistory=>[...updatedChatHistory,{role:\"user\",parts:[{ text: inputValue }]},{role:\"model\",parts:[{ text: data }]}]);\r\n        } catch (error) {\r\n            console.error('There has been a problem with your fetch operation:', error);\r\n        }\r\n\r\n        // Clear the input field\r\n        setInputValue(\"\");\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <div className=\"chat-box\">\r\n                <div className=\"chat-show\">\r\n                    {chatHistory.map((entry, index) => (\r\n                        <div key={index} className={`chat-message ${entry.role}`}>\r\n                            {entry.parts}\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n                <div className=\"input_div\">\r\n                    <input \r\n                        className=\"input_field\" \r\n                        value={inputValue} \r\n                        placeholder='Hi Please Ask me questions'\r\n                        onChange={handleInputChange} \r\n                    />\r\n                    <button className=\"arrow\" onClick={handleClick}>\r\n                        <img src=\"/icons8-arrow-50.png\" alt=\"Arrow icon\" />\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Chat;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}