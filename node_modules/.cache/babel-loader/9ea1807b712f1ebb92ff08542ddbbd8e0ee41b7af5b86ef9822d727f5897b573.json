{"ast":null,"code":"import is, { assert } from '@sindresorhus/is';\nimport asPromise from './as-promise/index.js';\nimport Request from './core/index.js';\nimport Options from './core/options.js';\n// The `delay` package weighs 10KB (!)\nconst delay = async ms => new Promise(resolve => {\n  setTimeout(resolve, ms);\n});\nconst isGotInstance = value => is.function_(value);\nconst aliases = ['get', 'post', 'put', 'patch', 'head', 'delete'];\nconst create = defaults => {\n  defaults = {\n    options: new Options(undefined, undefined, defaults.options),\n    handlers: [...defaults.handlers],\n    mutableDefaults: defaults.mutableDefaults\n  };\n  Object.defineProperty(defaults, 'mutableDefaults', {\n    enumerable: true,\n    configurable: false,\n    writable: false\n  });\n  // Got interface\n  const got = (url, options, defaultOptions = defaults.options) => {\n    const request = new Request(url, options, defaultOptions);\n    let promise;\n    const lastHandler = normalized => {\n      // Note: `options` is `undefined` when `new Options(...)` fails\n      request.options = normalized;\n      request._noPipe = !normalized.isStream;\n      void request.flush();\n      if (normalized.isStream) {\n        return request;\n      }\n      if (!promise) {\n        promise = asPromise(request);\n      }\n      return promise;\n    };\n    let iteration = 0;\n    const iterateHandlers = newOptions => {\n      const handler = defaults.handlers[iteration++] ?? lastHandler;\n      const result = handler(newOptions, iterateHandlers);\n      if (is.promise(result) && !request.options.isStream) {\n        if (!promise) {\n          promise = asPromise(request);\n        }\n        if (result !== promise) {\n          const descriptors = Object.getOwnPropertyDescriptors(promise);\n          for (const key in descriptors) {\n            if (key in result) {\n              // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n              delete descriptors[key];\n            }\n          }\n          // eslint-disable-next-line @typescript-eslint/no-floating-promises\n          Object.defineProperties(result, descriptors);\n          result.cancel = promise.cancel;\n        }\n      }\n      return result;\n    };\n    return iterateHandlers(request.options);\n  };\n  got.extend = (...instancesOrOptions) => {\n    const options = new Options(undefined, undefined, defaults.options);\n    const handlers = [...defaults.handlers];\n    let mutableDefaults;\n    for (const value of instancesOrOptions) {\n      if (isGotInstance(value)) {\n        options.merge(value.defaults.options);\n        handlers.push(...value.defaults.handlers);\n        mutableDefaults = value.defaults.mutableDefaults;\n      } else {\n        options.merge(value);\n        if (value.handlers) {\n          handlers.push(...value.handlers);\n        }\n        mutableDefaults = value.mutableDefaults;\n      }\n    }\n    return create({\n      options,\n      handlers,\n      mutableDefaults: Boolean(mutableDefaults)\n    });\n  };\n  // Pagination\n  const paginateEach = async function* (url, options) {\n    let normalizedOptions = new Options(url, options, defaults.options);\n    normalizedOptions.resolveBodyOnly = false;\n    const {\n      pagination\n    } = normalizedOptions;\n    assert.function_(pagination.transform);\n    assert.function_(pagination.shouldContinue);\n    assert.function_(pagination.filter);\n    assert.function_(pagination.paginate);\n    assert.number(pagination.countLimit);\n    assert.number(pagination.requestLimit);\n    assert.number(pagination.backoff);\n    const allItems = [];\n    let {\n      countLimit\n    } = pagination;\n    let numberOfRequests = 0;\n    while (numberOfRequests < pagination.requestLimit) {\n      if (numberOfRequests !== 0) {\n        // eslint-disable-next-line no-await-in-loop\n        await delay(pagination.backoff);\n      }\n      // eslint-disable-next-line no-await-in-loop\n      const response = await got(undefined, undefined, normalizedOptions);\n      // eslint-disable-next-line no-await-in-loop\n      const parsed = await pagination.transform(response);\n      const currentItems = [];\n      assert.array(parsed);\n      for (const item of parsed) {\n        if (pagination.filter({\n          item,\n          currentItems,\n          allItems\n        })) {\n          if (!pagination.shouldContinue({\n            item,\n            currentItems,\n            allItems\n          })) {\n            return;\n          }\n          yield item;\n          if (pagination.stackAllItems) {\n            allItems.push(item);\n          }\n          currentItems.push(item);\n          if (--countLimit <= 0) {\n            return;\n          }\n        }\n      }\n      const optionsToMerge = pagination.paginate({\n        response,\n        currentItems,\n        allItems\n      });\n      if (optionsToMerge === false) {\n        return;\n      }\n      if (optionsToMerge === response.request.options) {\n        normalizedOptions = response.request.options;\n      } else {\n        normalizedOptions.merge(optionsToMerge);\n        assert.any([is.urlInstance, is.undefined], optionsToMerge.url);\n        if (optionsToMerge.url !== undefined) {\n          normalizedOptions.prefixUrl = '';\n          normalizedOptions.url = optionsToMerge.url;\n        }\n      }\n      numberOfRequests++;\n    }\n  };\n  got.paginate = paginateEach;\n  got.paginate.all = async (url, options) => {\n    const results = [];\n    for await (const item of paginateEach(url, options)) {\n      results.push(item);\n    }\n    return results;\n  };\n  // For those who like very descriptive names\n  got.paginate.each = paginateEach;\n  // Stream API\n  got.stream = (url, options) => got(url, {\n    ...options,\n    isStream: true\n  });\n  // Shortcuts\n  for (const method of aliases) {\n    got[method] = (url, options) => got(url, {\n      ...options,\n      method\n    });\n    got.stream[method] = (url, options) => got(url, {\n      ...options,\n      method,\n      isStream: true\n    });\n  }\n  if (!defaults.mutableDefaults) {\n    Object.freeze(defaults.handlers);\n    defaults.options.freeze();\n  }\n  Object.defineProperty(got, 'defaults', {\n    value: defaults,\n    writable: false,\n    configurable: false,\n    enumerable: true\n  });\n  return got;\n};\nexport default create;","map":{"version":3,"names":["is","assert","asPromise","Request","Options","delay","ms","Promise","resolve","setTimeout","isGotInstance","value","function_","aliases","create","defaults","options","undefined","handlers","mutableDefaults","Object","defineProperty","enumerable","configurable","writable","got","url","defaultOptions","request","promise","lastHandler","normalized","_noPipe","isStream","flush","iteration","iterateHandlers","newOptions","handler","result","descriptors","getOwnPropertyDescriptors","key","defineProperties","cancel","extend","instancesOrOptions","merge","push","Boolean","paginateEach","normalizedOptions","resolveBodyOnly","pagination","transform","shouldContinue","filter","paginate","number","countLimit","requestLimit","backoff","allItems","numberOfRequests","response","parsed","currentItems","array","item","stackAllItems","optionsToMerge","any","urlInstance","prefixUrl","all","results","each","stream","method","freeze"],"sources":["D:/LangChainJS/chatpdf/node_modules/got/dist/source/create.js"],"sourcesContent":["import is, { assert } from '@sindresorhus/is';\nimport asPromise from './as-promise/index.js';\nimport Request from './core/index.js';\nimport Options from './core/options.js';\n// The `delay` package weighs 10KB (!)\nconst delay = async (ms) => new Promise(resolve => {\n    setTimeout(resolve, ms);\n});\nconst isGotInstance = (value) => is.function_(value);\nconst aliases = [\n    'get',\n    'post',\n    'put',\n    'patch',\n    'head',\n    'delete',\n];\nconst create = (defaults) => {\n    defaults = {\n        options: new Options(undefined, undefined, defaults.options),\n        handlers: [...defaults.handlers],\n        mutableDefaults: defaults.mutableDefaults,\n    };\n    Object.defineProperty(defaults, 'mutableDefaults', {\n        enumerable: true,\n        configurable: false,\n        writable: false,\n    });\n    // Got interface\n    const got = ((url, options, defaultOptions = defaults.options) => {\n        const request = new Request(url, options, defaultOptions);\n        let promise;\n        const lastHandler = (normalized) => {\n            // Note: `options` is `undefined` when `new Options(...)` fails\n            request.options = normalized;\n            request._noPipe = !normalized.isStream;\n            void request.flush();\n            if (normalized.isStream) {\n                return request;\n            }\n            if (!promise) {\n                promise = asPromise(request);\n            }\n            return promise;\n        };\n        let iteration = 0;\n        const iterateHandlers = (newOptions) => {\n            const handler = defaults.handlers[iteration++] ?? lastHandler;\n            const result = handler(newOptions, iterateHandlers);\n            if (is.promise(result) && !request.options.isStream) {\n                if (!promise) {\n                    promise = asPromise(request);\n                }\n                if (result !== promise) {\n                    const descriptors = Object.getOwnPropertyDescriptors(promise);\n                    for (const key in descriptors) {\n                        if (key in result) {\n                            // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n                            delete descriptors[key];\n                        }\n                    }\n                    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n                    Object.defineProperties(result, descriptors);\n                    result.cancel = promise.cancel;\n                }\n            }\n            return result;\n        };\n        return iterateHandlers(request.options);\n    });\n    got.extend = (...instancesOrOptions) => {\n        const options = new Options(undefined, undefined, defaults.options);\n        const handlers = [...defaults.handlers];\n        let mutableDefaults;\n        for (const value of instancesOrOptions) {\n            if (isGotInstance(value)) {\n                options.merge(value.defaults.options);\n                handlers.push(...value.defaults.handlers);\n                mutableDefaults = value.defaults.mutableDefaults;\n            }\n            else {\n                options.merge(value);\n                if (value.handlers) {\n                    handlers.push(...value.handlers);\n                }\n                mutableDefaults = value.mutableDefaults;\n            }\n        }\n        return create({\n            options,\n            handlers,\n            mutableDefaults: Boolean(mutableDefaults),\n        });\n    };\n    // Pagination\n    const paginateEach = (async function* (url, options) {\n        let normalizedOptions = new Options(url, options, defaults.options);\n        normalizedOptions.resolveBodyOnly = false;\n        const { pagination } = normalizedOptions;\n        assert.function_(pagination.transform);\n        assert.function_(pagination.shouldContinue);\n        assert.function_(pagination.filter);\n        assert.function_(pagination.paginate);\n        assert.number(pagination.countLimit);\n        assert.number(pagination.requestLimit);\n        assert.number(pagination.backoff);\n        const allItems = [];\n        let { countLimit } = pagination;\n        let numberOfRequests = 0;\n        while (numberOfRequests < pagination.requestLimit) {\n            if (numberOfRequests !== 0) {\n                // eslint-disable-next-line no-await-in-loop\n                await delay(pagination.backoff);\n            }\n            // eslint-disable-next-line no-await-in-loop\n            const response = (await got(undefined, undefined, normalizedOptions));\n            // eslint-disable-next-line no-await-in-loop\n            const parsed = await pagination.transform(response);\n            const currentItems = [];\n            assert.array(parsed);\n            for (const item of parsed) {\n                if (pagination.filter({ item, currentItems, allItems })) {\n                    if (!pagination.shouldContinue({ item, currentItems, allItems })) {\n                        return;\n                    }\n                    yield item;\n                    if (pagination.stackAllItems) {\n                        allItems.push(item);\n                    }\n                    currentItems.push(item);\n                    if (--countLimit <= 0) {\n                        return;\n                    }\n                }\n            }\n            const optionsToMerge = pagination.paginate({\n                response,\n                currentItems,\n                allItems,\n            });\n            if (optionsToMerge === false) {\n                return;\n            }\n            if (optionsToMerge === response.request.options) {\n                normalizedOptions = response.request.options;\n            }\n            else {\n                normalizedOptions.merge(optionsToMerge);\n                assert.any([is.urlInstance, is.undefined], optionsToMerge.url);\n                if (optionsToMerge.url !== undefined) {\n                    normalizedOptions.prefixUrl = '';\n                    normalizedOptions.url = optionsToMerge.url;\n                }\n            }\n            numberOfRequests++;\n        }\n    });\n    got.paginate = paginateEach;\n    got.paginate.all = (async (url, options) => {\n        const results = [];\n        for await (const item of paginateEach(url, options)) {\n            results.push(item);\n        }\n        return results;\n    });\n    // For those who like very descriptive names\n    got.paginate.each = paginateEach;\n    // Stream API\n    got.stream = ((url, options) => got(url, { ...options, isStream: true }));\n    // Shortcuts\n    for (const method of aliases) {\n        got[method] = ((url, options) => got(url, { ...options, method }));\n        got.stream[method] = ((url, options) => got(url, { ...options, method, isStream: true }));\n    }\n    if (!defaults.mutableDefaults) {\n        Object.freeze(defaults.handlers);\n        defaults.options.freeze();\n    }\n    Object.defineProperty(got, 'defaults', {\n        value: defaults,\n        writable: false,\n        configurable: false,\n        enumerable: true,\n    });\n    return got;\n};\nexport default create;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}