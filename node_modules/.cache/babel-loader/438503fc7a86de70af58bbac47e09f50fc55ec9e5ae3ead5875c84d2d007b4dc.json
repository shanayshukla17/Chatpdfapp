{"ast":null,"code":"import { isFunction } from \"./isFunction.js\";\nexport const isFormData = value => Boolean(value && isFunction(value.constructor) && value[Symbol.toStringTag] === \"FormData\" && isFunction(value.append) && isFunction(value.getAll) && isFunction(value.entries) && isFunction(value[Symbol.iterator]));","map":{"version":3,"names":["isFunction","isFormData","value","Boolean","constructor","Symbol","toStringTag","append","getAll","entries","iterator"],"sources":["D:/LangChainJS/chatpdf/node_modules/form-data-encoder/lib/util/isFormData.js"],"sourcesContent":["import { isFunction } from \"./isFunction.js\";\nexport const isFormData = (value) => Boolean(value\n    && isFunction(value.constructor)\n    && value[Symbol.toStringTag] === \"FormData\"\n    && isFunction(value.append)\n    && isFunction(value.getAll)\n    && isFunction(value.entries)\n    && isFunction(value[Symbol.iterator]));\n"],"mappings":"AAAA,SAASA,UAAU,QAAQ,iBAAiB;AAC5C,OAAO,MAAMC,UAAU,GAAIC,KAAK,IAAKC,OAAO,CAACD,KAAK,IAC3CF,UAAU,CAACE,KAAK,CAACE,WAAW,CAAC,IAC7BF,KAAK,CAACG,MAAM,CAACC,WAAW,CAAC,KAAK,UAAU,IACxCN,UAAU,CAACE,KAAK,CAACK,MAAM,CAAC,IACxBP,UAAU,CAACE,KAAK,CAACM,MAAM,CAAC,IACxBR,UAAU,CAACE,KAAK,CAACO,OAAO,CAAC,IACzBT,UAAU,CAACE,KAAK,CAACG,MAAM,CAACK,QAAQ,CAAC,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}