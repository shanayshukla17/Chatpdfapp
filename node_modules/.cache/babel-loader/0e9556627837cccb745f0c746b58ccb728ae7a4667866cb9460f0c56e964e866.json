{"ast":null,"code":"'use strict';\n\nconst {\n  Transform,\n  PassThrough\n} = require('stream');\nconst zlib = require('zlib');\nconst mimicResponse = require('mimic-response');\nmodule.exports = response => {\n  const contentEncoding = (response.headers['content-encoding'] || '').toLowerCase();\n  if (!['gzip', 'deflate', 'br'].includes(contentEncoding)) {\n    return response;\n  }\n\n  // TODO: Remove this when targeting Node.js 12.\n  const isBrotli = contentEncoding === 'br';\n  if (isBrotli && typeof zlib.createBrotliDecompress !== 'function') {\n    response.destroy(new Error('Brotli is not supported on Node.js < 12'));\n    return response;\n  }\n  let isEmpty = true;\n  const checker = new Transform({\n    transform(data, _encoding, callback) {\n      isEmpty = false;\n      callback(null, data);\n    },\n    flush(callback) {\n      callback();\n    }\n  });\n  const finalStream = new PassThrough({\n    autoDestroy: false,\n    destroy(error, callback) {\n      response.destroy();\n      callback(error);\n    }\n  });\n  const decompressStream = isBrotli ? zlib.createBrotliDecompress() : zlib.createUnzip();\n  decompressStream.once('error', error => {\n    if (isEmpty && !response.readable) {\n      finalStream.end();\n      return;\n    }\n    finalStream.destroy(error);\n  });\n  mimicResponse(response, finalStream);\n  response.pipe(checker).pipe(decompressStream).pipe(finalStream);\n  return finalStream;\n};","map":{"version":3,"names":["Transform","PassThrough","require","zlib","mimicResponse","module","exports","response","contentEncoding","headers","toLowerCase","includes","isBrotli","createBrotliDecompress","destroy","Error","isEmpty","checker","transform","data","_encoding","callback","flush","finalStream","autoDestroy","error","decompressStream","createUnzip","once","readable","end","pipe"],"sources":["D:/LangChainJS/chatpdf/node_modules/decompress-response/index.js"],"sourcesContent":["'use strict';\nconst {Transform, PassThrough} = require('stream');\nconst zlib = require('zlib');\nconst mimicResponse = require('mimic-response');\n\nmodule.exports = response => {\n\tconst contentEncoding = (response.headers['content-encoding'] || '').toLowerCase();\n\n\tif (!['gzip', 'deflate', 'br'].includes(contentEncoding)) {\n\t\treturn response;\n\t}\n\n\t// TODO: Remove this when targeting Node.js 12.\n\tconst isBrotli = contentEncoding === 'br';\n\tif (isBrotli && typeof zlib.createBrotliDecompress !== 'function') {\n\t\tresponse.destroy(new Error('Brotli is not supported on Node.js < 12'));\n\t\treturn response;\n\t}\n\n\tlet isEmpty = true;\n\n\tconst checker = new Transform({\n\t\ttransform(data, _encoding, callback) {\n\t\t\tisEmpty = false;\n\n\t\t\tcallback(null, data);\n\t\t},\n\n\t\tflush(callback) {\n\t\t\tcallback();\n\t\t}\n\t});\n\n\tconst finalStream = new PassThrough({\n\t\tautoDestroy: false,\n\t\tdestroy(error, callback) {\n\t\t\tresponse.destroy();\n\n\t\t\tcallback(error);\n\t\t}\n\t});\n\n\tconst decompressStream = isBrotli ? zlib.createBrotliDecompress() : zlib.createUnzip();\n\n\tdecompressStream.once('error', error => {\n\t\tif (isEmpty && !response.readable) {\n\t\t\tfinalStream.end();\n\t\t\treturn;\n\t\t}\n\n\t\tfinalStream.destroy(error);\n\t});\n\n\tmimicResponse(response, finalStream);\n\tresponse.pipe(checker).pipe(decompressStream).pipe(finalStream);\n\n\treturn finalStream;\n};\n"],"mappings":"AAAA,YAAY;;AACZ,MAAM;EAACA,SAAS;EAAEC;AAAW,CAAC,GAAGC,OAAO,CAAC,QAAQ,CAAC;AAClD,MAAMC,IAAI,GAAGD,OAAO,CAAC,MAAM,CAAC;AAC5B,MAAME,aAAa,GAAGF,OAAO,CAAC,gBAAgB,CAAC;AAE/CG,MAAM,CAACC,OAAO,GAAGC,QAAQ,IAAI;EAC5B,MAAMC,eAAe,GAAG,CAACD,QAAQ,CAACE,OAAO,CAAC,kBAAkB,CAAC,IAAI,EAAE,EAAEC,WAAW,CAAC,CAAC;EAElF,IAAI,CAAC,CAAC,MAAM,EAAE,SAAS,EAAE,IAAI,CAAC,CAACC,QAAQ,CAACH,eAAe,CAAC,EAAE;IACzD,OAAOD,QAAQ;EAChB;;EAEA;EACA,MAAMK,QAAQ,GAAGJ,eAAe,KAAK,IAAI;EACzC,IAAII,QAAQ,IAAI,OAAOT,IAAI,CAACU,sBAAsB,KAAK,UAAU,EAAE;IAClEN,QAAQ,CAACO,OAAO,CAAC,IAAIC,KAAK,CAAC,yCAAyC,CAAC,CAAC;IACtE,OAAOR,QAAQ;EAChB;EAEA,IAAIS,OAAO,GAAG,IAAI;EAElB,MAAMC,OAAO,GAAG,IAAIjB,SAAS,CAAC;IAC7BkB,SAASA,CAACC,IAAI,EAAEC,SAAS,EAAEC,QAAQ,EAAE;MACpCL,OAAO,GAAG,KAAK;MAEfK,QAAQ,CAAC,IAAI,EAAEF,IAAI,CAAC;IACrB,CAAC;IAEDG,KAAKA,CAACD,QAAQ,EAAE;MACfA,QAAQ,CAAC,CAAC;IACX;EACD,CAAC,CAAC;EAEF,MAAME,WAAW,GAAG,IAAItB,WAAW,CAAC;IACnCuB,WAAW,EAAE,KAAK;IAClBV,OAAOA,CAACW,KAAK,EAAEJ,QAAQ,EAAE;MACxBd,QAAQ,CAACO,OAAO,CAAC,CAAC;MAElBO,QAAQ,CAACI,KAAK,CAAC;IAChB;EACD,CAAC,CAAC;EAEF,MAAMC,gBAAgB,GAAGd,QAAQ,GAAGT,IAAI,CAACU,sBAAsB,CAAC,CAAC,GAAGV,IAAI,CAACwB,WAAW,CAAC,CAAC;EAEtFD,gBAAgB,CAACE,IAAI,CAAC,OAAO,EAAEH,KAAK,IAAI;IACvC,IAAIT,OAAO,IAAI,CAACT,QAAQ,CAACsB,QAAQ,EAAE;MAClCN,WAAW,CAACO,GAAG,CAAC,CAAC;MACjB;IACD;IAEAP,WAAW,CAACT,OAAO,CAACW,KAAK,CAAC;EAC3B,CAAC,CAAC;EAEFrB,aAAa,CAACG,QAAQ,EAAEgB,WAAW,CAAC;EACpChB,QAAQ,CAACwB,IAAI,CAACd,OAAO,CAAC,CAACc,IAAI,CAACL,gBAAgB,CAAC,CAACK,IAAI,CAACR,WAAW,CAAC;EAE/D,OAAOA,WAAW;AACnB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}