{"ast":null,"code":"module.exports = rimraf;\nrimraf.sync = rimrafSync;\nvar path = require(\"path\"),\n  fs;\ntry {\n  // optional dependency\n  fs = require(\"graceful-fs\");\n} catch (er) {\n  fs = require(\"fs\");\n}\nvar lstat = \"lstat\";\nif (process.platform === \"win32\") {\n  // not reliable on windows prior to 0.7.9\n  var v = process.version.replace(/^v/, '').split(/\\.|-/).map(Number);\n  if (v[0] === 0 && (v[1] < 7 || v[1] == 7 && v[2] < 9)) {\n    lstat = \"stat\";\n  }\n}\nif (!fs[lstat]) lstat = \"stat\";\nvar lstatSync = lstat + \"Sync\";\n\n// for EMFILE handling\nvar timeout = 0;\nexports.EMFILE_MAX = 1000;\nexports.BUSYTRIES_MAX = 3;\nfunction rimraf(p, cb) {\n  if (!cb) throw new Error(\"No callback passed to rimraf()\");\n  var busyTries = 0;\n  rimraf_(p, function CB(er) {\n    if (er) {\n      if (er.code === \"EBUSY\" && busyTries < exports.BUSYTRIES_MAX) {\n        busyTries++;\n        var time = busyTries * 100;\n        // try again, with the same exact callback as this one.\n        return setTimeout(function () {\n          rimraf_(p, CB);\n        }, time);\n      }\n\n      // this one won't happen if graceful-fs is used.\n      if (er.code === \"EMFILE\" && timeout < exports.EMFILE_MAX) {\n        return setTimeout(function () {\n          rimraf_(p, CB);\n        }, timeout++);\n      }\n\n      // already gone\n      if (er.code === \"ENOENT\") er = null;\n    }\n    timeout = 0;\n    cb(er);\n  });\n}\nfunction rimraf_(p, cb) {\n  fs[lstat](p, function (er, s) {\n    if (er) {\n      // already gone\n      if (er.code === \"ENOENT\") return cb();\n      // some other kind of error, permissions, etc.\n      return cb(er);\n    }\n    return rm_(p, s, false, cb);\n  });\n}\nvar myGid = function myGid() {\n  var g = process.getgid && process.getgid();\n  myGid = function myGid() {\n    return g;\n  };\n  return g;\n};\nvar myUid = function myUid() {\n  var u = process.getuid && process.getuid();\n  myUid = function myUid() {\n    return u;\n  };\n  return u;\n};\nfunction writable(s) {\n  var mode = s.mode || 0777,\n    uid = myUid(),\n    gid = myGid();\n  return mode & 0002 || gid === s.gid && mode & 0020 || uid === s.uid && mode & 0200;\n}\nfunction rm_(p, s, didWritableCheck, cb) {\n  if (!didWritableCheck && !writable(s)) {\n    // make file writable\n    // user/group/world, doesn't matter at this point\n    // since it's about to get nuked.\n    return fs.chmod(p, s.mode | 0222, function (er) {\n      if (er) return cb(er);\n      rm_(p, s, true, cb);\n    });\n  }\n  if (!s.isDirectory()) {\n    return fs.unlink(p, cb);\n  }\n\n  // directory\n  fs.readdir(p, function (er, files) {\n    if (er) return cb(er);\n    asyncForEach(files.map(function (f) {\n      return path.join(p, f);\n    }), function (file, cb) {\n      rimraf(file, cb);\n    }, function (er) {\n      if (er) return cb(er);\n      fs.rmdir(p, cb);\n    });\n  });\n}\nfunction asyncForEach(list, fn, cb) {\n  if (!list.length) cb();\n  var c = list.length,\n    errState = null;\n  list.forEach(function (item, i, list) {\n    fn(item, function (er) {\n      if (errState) return;\n      if (er) return cb(errState = er);\n      if (--c === 0) return cb();\n    });\n  });\n}\n\n// this looks simpler, but it will fail with big directory trees,\n// or on slow stupid awful cygwin filesystems\nfunction rimrafSync(p) {\n  try {\n    var s = fs[lstatSync](p);\n  } catch (er) {\n    if (er.code === \"ENOENT\") return;\n    throw er;\n  }\n  if (!writable(s)) {\n    fs.chmodSync(p, s.mode | 0222);\n  }\n  if (!s.isDirectory()) return fs.unlinkSync(p);\n  fs.readdirSync(p).forEach(function (f) {\n    rimrafSync(path.join(p, f));\n  });\n  fs.rmdirSync(p);\n}","map":{"version":3,"names":["module","exports","rimraf","sync","rimrafSync","path","require","fs","er","lstat","process","platform","v","version","replace","split","map","Number","lstatSync","timeout","EMFILE_MAX","BUSYTRIES_MAX","p","cb","Error","busyTries","rimraf_","CB","code","time","setTimeout","s","rm_","myGid","g","getgid","myUid","u","getuid","writable","mode","uid","gid","didWritableCheck","chmod","isDirectory","unlink","readdir","files","asyncForEach","f","join","file","rmdir","list","fn","length","c","errState","forEach","item","i","chmodSync","unlinkSync","readdirSync","rmdirSync"],"sources":["D:/LangChainJS/chatpdf/node_modules/pdf-extract/node_modules/rimraf/rimraf.js"],"sourcesContent":["module.exports = rimraf\nrimraf.sync = rimrafSync\n\nvar path = require(\"path\")\n  , fs\n\ntry {\n  // optional dependency\n  fs = require(\"graceful-fs\")\n} catch (er) {\n  fs = require(\"fs\")\n}\n\nvar lstat = \"lstat\"\nif (process.platform === \"win32\") {\n  // not reliable on windows prior to 0.7.9\n  var v = process.version.replace(/^v/, '').split(/\\.|-/).map(Number)\n  if (v[0] === 0 && (v[1] < 7 || v[1] == 7 && v[2] < 9)) {\n    lstat = \"stat\"\n  }\n}\nif (!fs[lstat]) lstat = \"stat\"\nvar lstatSync = lstat + \"Sync\"\n\n// for EMFILE handling\nvar timeout = 0\nexports.EMFILE_MAX = 1000\nexports.BUSYTRIES_MAX = 3\n\nfunction rimraf (p, cb) {\n\n  if (!cb) throw new Error(\"No callback passed to rimraf()\")\n\n  var busyTries = 0\n\n  rimraf_(p, function CB (er) {\n    if (er) {\n      if (er.code === \"EBUSY\" && busyTries < exports.BUSYTRIES_MAX) {\n        busyTries ++\n        var time = busyTries * 100\n        // try again, with the same exact callback as this one.\n        return setTimeout(function () {\n          rimraf_(p, CB)\n        }, time)\n      }\n\n      // this one won't happen if graceful-fs is used.\n      if (er.code === \"EMFILE\" && timeout < exports.EMFILE_MAX) {\n        return setTimeout(function () {\n          rimraf_(p, CB)\n        }, timeout ++)\n      }\n\n      // already gone\n      if (er.code === \"ENOENT\") er = null\n    }\n\n    timeout = 0\n    cb(er)\n  })\n}\n\nfunction rimraf_ (p, cb) {\n  fs[lstat](p, function (er, s) {\n    if (er) {\n      // already gone\n      if (er.code === \"ENOENT\") return cb()\n      // some other kind of error, permissions, etc.\n      return cb(er)\n    }\n\n    return rm_(p, s, false, cb)\n  })\n}\n\n\nvar myGid = function myGid () {\n  var g = process.getgid && process.getgid()\n  myGid = function myGid () { return g }\n  return g\n}\n\nvar myUid = function myUid () {\n  var u = process.getuid && process.getuid()\n  myUid = function myUid () { return u }\n  return u\n}\n\n\nfunction writable (s) {\n  var mode = s.mode || 0777\n    , uid = myUid()\n    , gid = myGid()\n  return (mode & 0002)\n      || (gid === s.gid && (mode & 0020))\n      || (uid === s.uid && (mode & 0200))\n}\n\nfunction rm_ (p, s, didWritableCheck, cb) {\n  if (!didWritableCheck && !writable(s)) {\n    // make file writable\n    // user/group/world, doesn't matter at this point\n    // since it's about to get nuked.\n    return fs.chmod(p, s.mode | 0222, function (er) {\n      if (er) return cb(er)\n      rm_(p, s, true, cb)\n    })\n  }\n\n  if (!s.isDirectory()) {\n    return fs.unlink(p, cb)\n  }\n\n  // directory\n  fs.readdir(p, function (er, files) {\n    if (er) return cb(er)\n    asyncForEach(files.map(function (f) {\n      return path.join(p, f)\n    }), function (file, cb) {\n      rimraf(file, cb)\n    }, function (er) {\n      if (er) return cb(er)\n      fs.rmdir(p, cb)\n    })\n  })\n}\n\nfunction asyncForEach (list, fn, cb) {\n  if (!list.length) cb()\n  var c = list.length\n    , errState = null\n  list.forEach(function (item, i, list) {\n    fn(item, function (er) {\n      if (errState) return\n      if (er) return cb(errState = er)\n      if (-- c === 0) return cb()\n    })\n  })\n}\n\n// this looks simpler, but it will fail with big directory trees,\n// or on slow stupid awful cygwin filesystems\nfunction rimrafSync (p) {\n  try {\n    var s = fs[lstatSync](p)\n  } catch (er) {\n    if (er.code === \"ENOENT\") return\n    throw er\n  }\n\n  if (!writable(s)) {\n    fs.chmodSync(p, s.mode | 0222)\n  }\n\n  if (!s.isDirectory()) return fs.unlinkSync(p)\n\n  fs.readdirSync(p).forEach(function (f) {\n    rimrafSync(path.join(p, f))\n  })\n  fs.rmdirSync(p)\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}