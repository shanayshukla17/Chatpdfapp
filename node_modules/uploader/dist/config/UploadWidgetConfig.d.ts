import { UploadWidgetLocale } from "../modules/locales/UploadWidgetLocale";
import { UploadWidgetLayout } from "../config/UploadWidgetLayout";
import { UploadWidgetEditor, UploadWidgetEditorRequired } from "../config/UploadWidgetEditor";
import { UploadWidgetResult } from "../components/modal/UploadWidgetResult";
import { UploadWidgetStyles, UploadWidgetStylesRequired } from "../config/UploadWidgetStyles";
import { FilePathDefinition, JsonObject } from "@upload-io/upload-api-client-upload-js";
import { UploadWidgetMethods } from "../config/UploadWidgetMethods";
import { OnPreUploadResult } from "../config/OnPreUploadResult";
import { Resolvable } from "../modules/common/Resolvable";
export interface UploadWidgetConfig {
    container?: string | HTMLElement;
    editor?: UploadWidgetEditor;
    layout?: UploadWidgetLayout;
    locale?: UploadWidgetLocale;
    maxFileCount?: number;
    maxFileSizeBytes?: number;
    metadata?: JsonObject;
    mimeTypes?: string[];
    multi?: boolean;
    onInit?: (methods: UploadWidgetMethods) => void;
    onPreUpload?: ((file: File) => Resolvable<OnPreUploadResult | undefined>) | undefined;
    onUpdate?: (files: UploadWidgetResult[]) => void;
    /**
     * @deprecated Use 'onPreUpload' instead, e.g. onPreUpload: (file: File) => ({errorMessage: "File too big."})
     */
    onValidate?: (file: File) => Resolvable<string | undefined>;
    path?: FilePathDefinition;
    showFinishButton?: boolean;
    showRemoveButton?: boolean;
    styles?: UploadWidgetStyles;
    tags?: string[];
}
export interface UploadWidgetConfigRequired {
    container: string | HTMLElement | undefined;
    editor: UploadWidgetEditorRequired;
    layout: UploadWidgetLayout;
    locale: UploadWidgetLocale;
    maxFileCount: number | undefined;
    maxFileSizeBytes: number | undefined;
    metadata: JsonObject | undefined;
    mimeTypes: string[] | undefined;
    multi: boolean;
    onInit: (methods: UploadWidgetMethods) => void;
    onPreUpload: (file: File) => Promise<OnPreUploadResult | undefined>;
    onUpdate: (files: UploadWidgetResult[]) => void;
    path: FilePathDefinition | undefined;
    showFinishButton: boolean;
    showRemoveButton: boolean;
    styles: UploadWidgetStylesRequired;
    tags: string[];
}
export declare namespace UploadWidgetConfigRequired {
    function from(options: UploadWidgetConfig): UploadWidgetConfigRequired;
}
